<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>半斤八两</title>
    <link>https://vritser.github.io/</link>
    <description>Recent content on 半斤八两</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Jul 2020 22:35:00 +0800</lastBuildDate>
    
	<atom:link href="https://vritser.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://vritser.github.io/about/</link>
      <pubDate>Mon, 27 Jul 2020 23:15:39 +0800</pubDate>
      
      <guid>https://vritser.github.io/about/</guid>
      <description>Friends AimerNeige&amp;rsquo;s Blog</description>
    </item>
    
    <item>
      <title>Emacs Capture Anywhere</title>
      <link>https://vritser.github.io/posts/capture-anywhere/</link>
      <pubDate>Mon, 27 Jul 2020 22:35:00 +0800</pubDate>
      
      <guid>https://vritser.github.io/posts/capture-anywhere/</guid>
      <description>Effects Register emacsclient as the org-protocol handler For macOS
Start ScriptEditor. Paste the following snippets:
on emacsclient(input) do shell script &amp;#34;/path/to/your/emacsclient -n -c &amp;#39;&amp;#34; &amp;amp; input &amp;amp; &amp;#34;&amp;#39;&amp;#34; tell application &amp;#34;Emacs&amp;#34; to activate end emacsclient on open location input emacsclient(input) end open location on open inputs repeat with raw_input in inputs set input to POSIX path of raw_input emacsclient(input) end repeat end open on run do shell script emacsclient(&amp;#34;&amp;#34;) end run Adjust the paths and save it (with &amp;lsquo;type&amp;rsquo; as Application) under /Applications/EmacsClient.</description>
    </item>
    
    <item>
      <title>Build Emacs 28 on branch feature/native-comp</title>
      <link>https://vritser.github.io/posts/emacs-28-native-comp/</link>
      <pubDate>Mon, 20 Jul 2020 02:48:00 +0800</pubDate>
      
      <guid>https://vritser.github.io/posts/emacs-28-native-comp/</guid>
      <description>Add JIT support to GCC curl https://raw.githubusercontent.com/vritser/dotfiles/master/gcc.jit.patch --output gcc.jit.patch cd ${brew --repo}/Library/Taps/homebrew/homebrew-core git apply /path/to/gcc.jit.patch brew install --build-from-source gcc Clone Emacs feature/native-comp branch git clone -b feature/native-comp https://github.com/emacs-mirror/emacs.git --depth=1 Build cd emacs export PATH=&amp;#34;/usr/local/opt/gnu-sed/libexec/gnubin:${PATH}&amp;#34; export LDFLAGS=&amp;#34;-L/usr/local/lib/gcc/your version&amp;#34; git clean -fdx ./autogen.sh CC=&amp;#39;clang&amp;#39; \  ./configure \  --disable-silent-rules \  --enable-locallisppath=/usr/local/share/emacs/site-lisp \  --prefix=${HOME}/gccemacs \  --with-nativecomp \  --with-ns \  --disable-ns-self-contained \ # --with-mailutils make -j8 make install -j8 Link Emacs.</description>
    </item>
    
    <item>
      <title>使用 Org-Mode、ox-hugo 编写博客</title>
      <link>https://vritser.github.io/posts/org_with_hugo/</link>
      <pubDate>Fri, 17 Jul 2020 14:21:00 +0800</pubDate>
      
      <guid>https://vritser.github.io/posts/org_with_hugo/</guid>
      <description>Hugo site config config.yaml
baseURL:&amp;#34;your site url&amp;#34;languageCode:&amp;#34;en-us&amp;#34;title:&amp;#34;title&amp;#34;theme:contrastbuildDrafts:false# Code Fences 渲染相关markup:highlight:codeFences:trueguessSyntax:falsehl_Lines:&amp;#34;&amp;#34;lineNoStart:1lineNos:falselineNumbersInTable:truenoClasses:truestyle:emacstabWidth:4ox-hugo (use-package ox-hugo :ensure t ;Auto-install the package from Melpa (optional) :after ox) (add-to-list &amp;#39;org-export-backends &amp;#39;hugo) 将以下代码片段放入你的 blog.org 文件头部, 配置含义
#+HUGO_BASE_DIR: ~/Documents/org/blog #+SEQ_TODO: TODO DRAFT DONE #+HUGO_AUTO_SET_LASTMOD: t #+PROPERTY: header-args :eval no Org Capture Setup (defun v-org-hugo-new-subtree-post-capture-template () &amp;#34;Returns `org-capture` template string for the new Hugo post.&amp;#34; (let* ((title (read-from-minibuffer &amp;#34;Post Title: &amp;#34;)) (fname (org-hugo-slug title))) (mapconcat #&amp;#39;identity `( ,(concat &amp;#34;** TODO &amp;#34; title) &amp;#34;:PROPERTIES:&amp;#34; ,(concat &amp;#34;:EXPORT_FILE_NAME: &amp;#34; fname) &amp;#34;:END:&amp;#34; &amp;#34;%?</description>
    </item>
    
    <item>
      <title>Oh My Zsh</title>
      <link>https://vritser.github.io/posts/omz/</link>
      <pubDate>Wed, 15 Jul 2020 18:35:00 +0800</pubDate>
      
      <guid>https://vritser.github.io/posts/omz/</guid>
      <description>Install iTerm2 brew cask install iterm2 Install oh-my-zsh via curl
sh -c &amp;#34;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; via wget
sh -c &amp;#34;$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)&amp;#34; Themes ZSH_THEME=&amp;#34;your theme name&amp;#34; source ~/.zshrc NOTE: Some themes need to install Powerline-patched font to render correctly.
git clone https://github.com/powerline/fonts --depth=1 cd fonts ./install.sh cd .. &amp;amp;&amp;amp; rm -rf fonts To test if your terminal and font support it, copy the following command to your terminal:
echo &amp;#34;\ue0b0 \u00b1 \ue0a0 \u27a6 \u2718 \u26a1 \u2699&amp;#34; Uninstall</description>
    </item>
    
    <item>
      <title>Homebrew</title>
      <link>https://vritser.github.io/posts/homebrew/</link>
      <pubDate>Mon, 13 Jul 2020 22:37:00 +0800</pubDate>
      
      <guid>https://vritser.github.io/posts/homebrew/</guid>
      <description>Install Homebrew /bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&amp;#34; Check if Homebrew is installed and working properly.
brew -v Use USTC Mirro Homebrew Core
# replace brew.git cd &amp;#34;$(brew --repo)&amp;#34; git remote set-url origin https://mirrors.ustc.edu.cn/brew.git # replace homebrew-core.git cd &amp;#34;$(brew --repo)/Library/Taps/homebrew/homebrew-core&amp;#34; git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git Bottles
for bash user
echo &amp;#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&amp;#39; &amp;gt;&amp;gt; ~/.bash_profile source ~/.bash_profile for zsh user
echo &amp;#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&amp;#39; &amp;gt;&amp;gt; ~/.zshrc source ~/.zshrc Reset
# reset brew.git cd &amp;#34;$(brew --repo)&amp;#34; git remote set-url origin https://github.</description>
    </item>
    
  </channel>
</rss>